//tengo que ponerlo en funciones
#include <stdio.h>
#include <string.h>
#include <float.h>

typedef struct {
	char cuenca_hidrografica[50];
	char embalse_nombre[50];
	int mes;
	float dosmildoce;
	float dosmiltrece;
	float dosmilcatorce;
	float dosmilquince;
	float dosmildieciseis;
	float dosmildiecisiete;
	float dosmildieciocho;
	float dosmildiecinueve;
	float dosmilveinte;
	float dosmilveintiuno;
	//
	char embalse_nom[50];
	float etotal;
	//
}frase;
//
typedef struct {
    char nombre_embalse[100];
    float superficie;
    char tipo_presa[100];
    char uso_abastecimiento[5];
    char uso_riego[5];
    char uso_electricidad[5];
    char uso_industrial[5];
    char uso_pesca[5];
    char uso_navegacion[5];
    char uso_banyo[5];
    char uso_picnic[5];
    char uso_restaurante[5];
} DatosComparacion;
//
int main(){
	
//variables
int vb=0, vc=0, vco=0,i;//for y ficheros

int ncuenca,n_embalse,l_r_embalse;//embalse1
int ncuenca2,n_embalse2,l_r_embalse2;//embalse2
int mes_anyo, anyo,mes;//fechas y meses
	
frase cuenca[4236], embalse[353]; 
DatosComparacion comp[353];

	
//Fich
FILE *base;
base=fopen("texto_proyecto.txt","r");
		if(base==NULL){
			printf("Error al abrir el fichero base.\n");
			return -1;
		}
FILE *capacidad;
capacidad=fopen("Embalses_capacidad.txt","r");
	    if(capacidad==NULL){
			printf("Error al abrir el fichero de capacidad.\n");
			return -1;
		}
FILE *F_comparacion;
F_comparacion=fopen("comparacion.txt","r");
	    if(F_comparacion==NULL){
			printf("Error al abrir el fichero de comparaci√≥n.\n");
			return -1;
		}

	
//
	
while(fscanf(base,"%s\t%s\t%i\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\t%f\n",cuenca[vb].cuenca_hidrografica,cuenca[vb].embalse_nombre,&cuenca[vb].mes,&cuenca[vb].dosmildoce,&cuenca[vb].dosmiltrece,&cuenca[vb].dosmilcatorce,&cuenca[vb].dosmilquince,&cuenca[vb].dosmildieciseis,&cuenca[vb].dosmildiecisiete,&cuenca[vb].dosmildieciocho,&cuenca[vb].dosmildiecinueve,&cuenca[vb].dosmilveinte,&cuenca[vb].dosmilveintiuno)!=EOF){
	   
	   
	    vb++;
	}
while(fscanf(capacidad,"%s\t%f\n",embalse[vc].embalse_nom,&embalse[vc].etotal)!=EOF){
	
		vc++;
	}
while(fscanf(F_comparacion,"%s\t%f\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n",comp[vco].nombre_embalse,&comp[vco].superficie,comp[vco].tipo_presa,comp[vco].uso_abastecimiento,comp[vco].uso_riego,comp[vco].uso_electricidad,comp[vco].uso_industrial,comp[vco].uso_pesca,comp[vco].uso_navegacion,comp[vco].uso_banyo,comp[vco].uso_picnic,comp[vco].uso_restaurante)!=EOF){
	    vco++;
	}
	
//
	
int numc=0;//variables cuenca
for(i=0;i<vb;i++){
	if(strcmp(cuenca[i].cuenca_hidrografica,cuenca[i-1].cuenca_hidrografica)!=0){
			numc++;
			printf("%i-",numc);
			printf("%s\n",cuenca[i].cuenca_hidrografica);
			
	}
	
}
//
do{
	printf("Introduce el numero de cuenca:\t");
	scanf("%i",&ncuenca);
	//
	if(ncuenca<=0||ncuenca>16){
		printf("Numero no valido, pruebe otra vez.\n");
	}
}while(ncuenca<=0 || ncuenca>16 );
	//Ahora imprimiremos los embalses
	int nume=0;
	switch(ncuenca)
	{case(1):
		for(i=0;i<8*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse del Cantabrico Occidental: ");
		scanf("%i",&n_embalse);
		l_r_embalse=n_embalse*12;
		break;
	case(2):
	 	for(i=8*12;i<12*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
	    }}
	    printf("Elige un numero de embalse del Cantabrico Oriental: ");
	    scanf("%i",&n_embalse);
	    l_r_embalse=8*12+n_embalse*12;
	    break;
	case(3):
		for(i=12*12;i<24*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca Mediterranea Andaluza: ");
		scanf("%i",&n_embalse);
		l_r_embalse=12*12+n_embalse*12;
		break;
	case(4):
		for(i=24*12;i<31*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuencas Internas de Cataluna: ");
		scanf("%i",&n_embalse);
		l_r_embalse=24*12+n_embalse*12;
		break;
	case(5):
		for(i=31*12;i<33*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuencas Internas del Pais Vasco: ");
		scanf("%i",&n_embalse);
		l_r_embalse=31*12+n_embalse*12;
		break;
	case(6):
		for(i=33*12;i<67*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca del Duero: ");
		scanf("%i",&n_embalse);
		l_r_embalse=33*12+n_embalse*12;
		break;
	case(7):
		for(i=67*12;i<129*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca del Ebro: ");
		scanf("%i",&n_embalse);
		l_r_embalse=67*12+n_embalse*12;
		break;
	case(8):
		for(i=129*12;i<140*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca de Costa de Galicia: ");
		scanf("%i",&n_embalse);
		l_r_embalse=129*12+n_embalse*12;
		break;
	case(9):
		for(i=140*12;i<148*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca de Guadalete-Barbete: ");
		scanf("%i",&n_embalse);
		l_r_embalse=140*12+n_embalse*12;
		break;
	case(10):
		for(i=148*12;i<194*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca del Guadalquivir: ");
		scanf("%i",&n_embalse);
		l_r_embalse=148*12+n_embalse*12;
		break;
	case(11):
		for(i=194*12;i<228*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca del Guadiana: ");
		scanf("%i",&n_embalse);
		l_r_embalse=194*12+n_embalse*12;
		break;
	case(12):
		for(i=228*12;i<251*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca de Jucar: ");
		scanf("%i",&n_embalse);
		l_r_embalse=228*12+n_embalse*12;
		break;
	case(13):
		for(i=251*12;i<280*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca de Mino-Sil: ");
		scanf("%i",&n_embalse);
		l_r_embalse=251*12+n_embalse*12;
		break;
	case(14):
		for(i=280*12;i<295*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca de Segura: ");
		scanf("%i",&n_embalse);
		l_r_embalse=280*12+n_embalse*12;
		break;
	case(15):
		for(i=295*12;i<346*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca del Tajo: ");
		scanf("%i",&n_embalse);
		l_r_embalse=295*12+n_embalse*12;
		break;
	case(16):
		for(i=346*12;i<353*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume++;
			printf("%i-",nume);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca de Tinto,Odiel y Piedras: ");
		scanf("%i",&n_embalse);
		l_r_embalse=346*12+n_embalse*12;
		break;
	}

printf("\nAhora elegiremos el embalse a comparar. \n");



	//Elegiremos el segundo embalse
	
	int numc2=0;//variables cuenca
for(i=0;i<vb;i++){
	if(strcmp(cuenca[i].cuenca_hidrografica,cuenca[i-1].cuenca_hidrografica)!=0){
			numc2++;
			printf("%i-",numc2);
			printf("%s\n",cuenca[i].cuenca_hidrografica);
			
	}
	
}
//
do{
	printf("\nIntroduce el numero de la segunda cuenca:\t");
	scanf("%i",&ncuenca2);
	//
	if(ncuenca2<=0||ncuenca2>16){
		printf("Numero no valido, pruebe otra vez.\n");
	}
}while(ncuenca2<=0 || ncuenca2>16 );
	//Ahora imprimiremos los embalses
	int nume2=0;
	switch(ncuenca2)
	{case(1):
		for(i=0;i<8*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse del Cantabrico Occidental: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=n_embalse2*12;
		break;
	case(2):
	 	for(i=8*12;i<12*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
	    }}
	    printf("Elige un numero de embalse del Cantabrico Oriental: ");
	    scanf("%i",&n_embalse2);
	    l_r_embalse2=8*12+n_embalse2*12;
	    break;
	case(3):
		for(i=12*12;i<24*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca Mediterranea Andaluza: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=12*12+n_embalse2*12;
		break;
	case(4):
		for(i=24*12;i<31*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuencas Internas de Cataluna: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=24*12+n_embalse2*12;
		break;
	case(5):
		for(i=31*12;i<33*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuencas Internas del Pais Vasco: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=31*12+n_embalse2*12;
		break;
	case(6):
		for(i=33*12;i<67*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca del Duero: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=33*12+n_embalse2*12;
		break;
	case(7):
		for(i=67*12;i<129*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca del Ebro: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=67*12+n_embalse2*12;
		break;
	case(8):
		for(i=129*12;i<140*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca de Costa de Galicia: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=129*12+n_embalse2*12;
		break;
	case(9):
		for(i=140*12;i<148*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca de Guadalete-Barbete: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=140*12+n_embalse2*12;
		break;
	case(10):
		for(i=148*12;i<194*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca del Guadalquivir: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=148*12+n_embalse2*12;
		break;
	case(11):
		for(i=194*12;i<228*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca del Guadiana: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=194*12+n_embalse2*12;
		break;
	case(12):
		for(i=228*12;i<251*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca de Jucar: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=228*12+n_embalse2*12;
		break;
	case(13):
		for(i=251*12;i<280*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca de Mino-Sil: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=251*12+n_embalse2*12;
		break;
	case(14):
		for(i=280*12;i<295*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca de Segura: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=280*12+n_embalse2*12;
		break;
	case(15):
		for(i=295*12;i<346*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca del Tajo: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=295*12+n_embalse2*12;
		break;
	case(16):
		for(i=346*12;i<353*12;i++){
		if(strcmp(cuenca[i].embalse_nombre,cuenca[i-1].embalse_nombre)!=0){
			nume2++;
			printf("%i-",nume2);
			printf("%s\n",cuenca[i].embalse_nombre);
		}
		}
		printf("Elige un numero de embalse de la Cuenca de Tinto,Odiel y Piedras: ");
		scanf("%i",&n_embalse2);
		l_r_embalse2=346*12+n_embalse2*12;
		break;
	}
	printf("\nEl primer embalse elegido es %s\n", cuenca[l_r_embalse-1].embalse_nombre);
	printf("El segundo embalse elegido es %s\n", cuenca[l_r_embalse2-1].embalse_nombre);
	
//fechas y meses 

do {
printf("\n¬øQue informacion precisas?\n");
printf("1.-Comparacion de embalses segun el anyo\n2.-Comparacion de embalses segun el mes.\n");	
scanf("%i",&mes_anyo);
if(mes_anyo<=0||mes_anyo>2){
	printf("Numero invalido, vuelva a intentarlo.\n");
}
}
while(mes_anyo<=0||mes_anyo>2);

if(mes_anyo==1){
	float min= FLT_MAX;
	float max=FLT_MIN;
	float min2= FLT_MAX;
	float max2=FLT_MIN;
	float res;
	
	do {
		printf("\nIntroduce el anyo deseado 2012-2021.\n");
		scanf("%i",&anyo);
		if(anyo<2012||anyo>2021){
			("Anyo invalido, intentalo otra vez.\n");
		}
	}while(anyo<2012||anyo>2021);
	
	switch(anyo){
		case(2012):
		    for(int  j=l_r_embalse-12; j<l_r_embalse-1; j++){
				if(cuenca[j].dosmildoce<min){min=cuenca[j].dosmildoce;}
				if(cuenca[j].dosmildoce>max){max=cuenca[j].dosmildoce;}
	         }
	        for(int  k=l_r_embalse2-12; k<l_r_embalse2-1; k++){
				if(cuenca[k].dosmildoce<min2){min2=cuenca[k].dosmildoce;}
				if(cuenca[k].dosmildoce>max2){max2=cuenca[k].dosmildoce;}
	         }
	         printf("\nLa capacidad del primer embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse-1].embalse_nombre,anyo,min,max);
	         printf("La capacidad del segundo embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse2-1].embalse_nombre,anyo,min2,max2);
	         if(max2>max){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse2-1].embalse_nombre,res=max2-max,cuenca[l_r_embalse-1].embalse_nombre);}
	         if(max>max2){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,res=max-max2,cuenca[l_r_embalse2-1].embalse_nombre);}
	         if(max==max2){printf("%s y %s coincidieron en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,cuenca[l_r_embalse2-1].embalse_nombre);}
	         break;
	    case(2013):
		    for(int  j=l_r_embalse-12; j<l_r_embalse-1; j++){
				if(cuenca[j].dosmiltrece<min){min=cuenca[j].dosmiltrece;}
				if(cuenca[j].dosmiltrece>max){max=cuenca[j].dosmiltrece;}
	         }
	        for(int  k=l_r_embalse2-12; k<l_r_embalse2-1; k++){
				if(cuenca[k].dosmiltrece<min2){min2=cuenca[k].dosmiltrece;}
				if(cuenca[k].dosmiltrece>max2){max2=cuenca[k].dosmiltrece;}
	         }
	         printf("\nLa capacidad del primer embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse-1].embalse_nombre,anyo,min,max);
	         printf("La capacidad del segundo embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse2-1].embalse_nombre,anyo,min2,max2);
	         if(max2>max){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse2-1].embalse_nombre,res=max2-max,cuenca[l_r_embalse-1].embalse_nombre);}
	         if(max>max2){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,res=max-max2,cuenca[l_r_embalse2-1].embalse_nombre);}
	         if(max==max2){printf("%s y %s coincidieron en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,cuenca[l_r_embalse2-1].embalse_nombre);}
	         break;
	    case(2014):
		    for(int  j=l_r_embalse-12; j<l_r_embalse-1; j++){
				if(cuenca[j].dosmilcatorce<min){min=cuenca[j].dosmilcatorce;}
				if(cuenca[j].dosmilcatorce>max){max=cuenca[j].dosmilcatorce;}
	         }
	        for(int  k=l_r_embalse2-12; k<l_r_embalse2-1; k++){
				if(cuenca[k].dosmilcatorce<min2){min2=cuenca[k].dosmilcatorce;}
				if(cuenca[k].dosmilcatorce>max2){max2=cuenca[k].dosmilcatorce;}
	         }
	         printf("\nLa capacidad del primer embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse-1].embalse_nombre,anyo,min,max);
	         printf("La capacidad del segundo embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse2-1].embalse_nombre,anyo,min2,max2);
	         if(max2>max){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse2-1].embalse_nombre,res=max2-max,cuenca[l_r_embalse-1].embalse_nombre);}
	         if(max>max2){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,res=max-max2,cuenca[l_r_embalse2-1].embalse_nombre);}
	         if(max==max2){printf("%s y %s coincidieron en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,cuenca[l_r_embalse2-1].embalse_nombre);}
	         break;
	    case(2015):
		    for(int  j=l_r_embalse-12; j<l_r_embalse-1; j++){
				if(cuenca[j].dosmilquince<min){min=cuenca[j].dosmilquince;}
				if(cuenca[j].dosmilquince>max){max=cuenca[j].dosmilquince;}
	         }
	        for(int  k=l_r_embalse2-12; k<l_r_embalse2-1; k++){
				if(cuenca[k].dosmilquince<min2){min2=cuenca[k].dosmilquince;}
				if(cuenca[k].dosmilquince>max2){max2=cuenca[k].dosmilquince;}
	         }
	         printf("\nLa capacidad del primer embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse-1].embalse_nombre,anyo,min,max);
	         printf("La capacidad del segundo embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse2-1].embalse_nombre,anyo,min2,max2);
	         if(max2>max){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse2-1].embalse_nombre,res=max2-max,cuenca[l_r_embalse-1].embalse_nombre);}
	         if(max>max2){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,res=max-max2,cuenca[l_r_embalse2-1].embalse_nombre);}
	         if(max==max2){printf("%s y %s coincidieron en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,cuenca[l_r_embalse2-1].embalse_nombre);}
	         break;
	    case(2016):
		    for(int  j=l_r_embalse-12; j<l_r_embalse-1; j++){
				if(cuenca[j].dosmildieciseis<min){min=cuenca[j].dosmildieciseis;}
				if(cuenca[j].dosmildieciseis>max){max=cuenca[j].dosmildieciseis;}
	         }
	        for(int  k=l_r_embalse2-12; k<l_r_embalse2-1; k++){
				if(cuenca[k].dosmildieciseis<min2){min2=cuenca[k].dosmildieciseis;}
				if(cuenca[k].dosmildieciseis>max2){max2=cuenca[k].dosmildieciseis;}
	         }
	         printf("\nLa capacidad del primer embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse-1].embalse_nombre,anyo,min,max);
	         printf("La capacidad del segundo embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse2-1].embalse_nombre,anyo,min2,max2);
	         if(max2>max){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse2-1].embalse_nombre,res=max2-max,cuenca[l_r_embalse-1].embalse_nombre);}
	         if(max>max2){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,res=max-max2,cuenca[l_r_embalse2-1].embalse_nombre);}
	         if(max==max2){printf("%s y %s coincidieron en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,cuenca[l_r_embalse2-1].embalse_nombre);}
	         break;
	    case(2017):
		    for(int  j=l_r_embalse-12; j<l_r_embalse-1; j++){
				if(cuenca[j].dosmildiecisiete<min){min=cuenca[j].dosmildiecisiete;}
				if(cuenca[j].dosmildiecisiete>max){max=cuenca[j].dosmildiecisiete;}
	         }
	        for(int  k=l_r_embalse2-12; k<l_r_embalse2-1; k++){
				if(cuenca[k].dosmildiecisiete<min2){min2=cuenca[k].dosmildiecisiete;}
				if(cuenca[k].dosmildiecisiete>max2){max2=cuenca[k].dosmildiecisiete;}
	         }
	         printf("\nLa capacidad del primer embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse-1].embalse_nombre,anyo,min,max);
	         printf("La capacidad del segundo embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse2-1].embalse_nombre,anyo,min2,max2);
	         if(max2>max){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse2-1].embalse_nombre,res=max2-max,cuenca[l_r_embalse-1].embalse_nombre);}
	         if(max>max2){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,res=max-max2,cuenca[l_r_embalse2-1].embalse_nombre);}
	         if(max==max2){printf("%s y %s coincidieron en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,cuenca[l_r_embalse2-1].embalse_nombre);}
	         break;
	    case(2018):
		    for(int  j=l_r_embalse-12; j<l_r_embalse-1; j++){
				if(cuenca[j].dosmildieciocho<min){min=cuenca[j].dosmildieciocho;}
				if(cuenca[j].dosmildieciocho>max){max=cuenca[j].dosmildieciocho;}
	         }
	        for(int  k=l_r_embalse2-12; k<l_r_embalse2-1; k++){
				if(cuenca[k].dosmildieciocho<min2){min2=cuenca[k].dosmildieciocho;}
				if(cuenca[k].dosmildieciocho>max2){max2=cuenca[k].dosmildieciocho;}
	         }
	         printf("\nLa capacidad del primer embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse-1].embalse_nombre,anyo,min,max);
	         printf("La capacidad del segundo embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse2-1].embalse_nombre,anyo,min2,max2);
	         if(max2>max){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse2-1].embalse_nombre,res=max2-max,cuenca[l_r_embalse-1].embalse_nombre);}
	         if(max>max2){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,res=max-max2,cuenca[l_r_embalse2-1].embalse_nombre);}
	         if(max==max2){printf("%s y %s coincidieron en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,cuenca[l_r_embalse2-1].embalse_nombre);}
	         break;
	    case(2019):
		    for(int  j=l_r_embalse-12; j<l_r_embalse-1; j++){
				if(cuenca[j].dosmildiecinueve<min){min=cuenca[j].dosmildiecinueve;}
				if(cuenca[j].dosmildiecinueve>max){max=cuenca[j].dosmildiecinueve;}
	         }
	        for(int  k=l_r_embalse2-12; k<l_r_embalse2-1; k++){
				if(cuenca[k].dosmildiecinueve<min2){min2=cuenca[k].dosmildiecinueve;}
				if(cuenca[k].dosmildiecinueve>max2){max2=cuenca[k].dosmildiecinueve;}
	         }
	         printf("\nLa capacidad del primer embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse-1].embalse_nombre,anyo,min,max);
	         printf("La capacidad del segundo embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse2-1].embalse_nombre,anyo,min2,max2);
	         if(max2>max){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse2-1].embalse_nombre,res=max2-max,cuenca[l_r_embalse-1].embalse_nombre);}
	         if(max>max2){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,res=max-max2,cuenca[l_r_embalse2-1].embalse_nombre);}
	         if(max==max2){printf("%s y %s coincidieron en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,cuenca[l_r_embalse2-1].embalse_nombre);}
	         break;
	    case(2020):
		    for(int  j=l_r_embalse-12; j<l_r_embalse-1; j++){
				if(cuenca[j].dosmilveinte<min){min=cuenca[j].dosmilveinte;}
				if(cuenca[j].dosmilveinte>max){max=cuenca[j].dosmilveinte;}
	         }
	        for(int  k=l_r_embalse2-12; k<l_r_embalse2-1; k++){
				if(cuenca[k].dosmilveinte<min2){min2=cuenca[k].dosmilveinte;}
				if(cuenca[k].dosmilveinte>max2){max2=cuenca[k].dosmilveinte;}
	         }
	         printf("\nLa capacidad del primer embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse-1].embalse_nombre,anyo,min,max);
	         printf("La capacidad del segundo embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse2-1].embalse_nombre,anyo,min2,max2);
	         if(max2>max){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse2-1].embalse_nombre,res=max2-max,cuenca[l_r_embalse-1].embalse_nombre);}
	         if(max>max2){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,res=max-max2,cuenca[l_r_embalse2-1].embalse_nombre);}
	         if(max==max2){printf("%s y %s coincidieron en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,cuenca[l_r_embalse2-1].embalse_nombre);}
	         break;
	    case(2021):
		    for(int  j=l_r_embalse-12; j<l_r_embalse-1; j++){
				if(cuenca[j].dosmilveintiuno<min){min=cuenca[j].dosmilveintiuno;}
				if(cuenca[j].dosmilveintiuno>max){max=cuenca[j].dosmilveintiuno;}
	         }
	        for(int  k=l_r_embalse2-12; k<l_r_embalse2-1; k++){
				if(cuenca[k].dosmilveintiuno<min2){min2=cuenca[k].dosmilveintiuno;}
				if(cuenca[k].dosmilveintiuno>max2){max2=cuenca[k].dosmilveintiuno;}
	         }
	         printf("\nLa capacidad del primer embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse-1].embalse_nombre,anyo,min,max);
	         printf("La capacidad del segundo embalse %s en %i va de %.2f-%.2f\n", cuenca[l_r_embalse2-1].embalse_nombre,anyo,min2,max2);
	         if(max2>max){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse2-1].embalse_nombre,res=max2-max,cuenca[l_r_embalse-1].embalse_nombre);}
	         if(max>max2){printf("%s sobrepaso en %.2f hm^3 a %s en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,res=max-max2,cuenca[l_r_embalse2-1].embalse_nombre);}
	         if(max==max2){printf("%s y %s coincidieron en su capacidad mas alta.\n", cuenca[l_r_embalse-1].embalse_nombre,cuenca[l_r_embalse2-1].embalse_nombre);}
	         break;
}
}
if(mes_anyo==2){
	float res_mes,max_mes,min_mes;
	
		do {
		printf("\nIntroduce el anyo deseado 2012-2021.\n");
		scanf("%i",&anyo);
		if(anyo<2012||anyo>2021){
			("Anyo invalido, intentalo otra vez.\n");
		}
	}while(anyo<2012||anyo>2021);
	
	do {
		printf("\nIntroduce el mes deseado 1-12.\n");
		scanf("%i",&mes);
		if(mes<1||mes>12){
			("Anyo invalido, intentalo otra vez.\n");
		}
	}while(mes<1||mes>12);
	switch(anyo){
		case(2012):
			printf("La capacidad del primer embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse-13+mes].dosmildoce);
			printf("La capacidad del segundo embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse2-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse2-13+mes].dosmildoce);
			if(cuenca[l_r_embalse2-13+mes].dosmildoce>cuenca[l_r_embalse-13+mes].dosmildoce){
			   max_mes=	cuenca[l_r_embalse2-13+mes].dosmildoce;
			   min_mes=cuenca[l_r_embalse-13+mes].dosmildoce;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse-13+mes].dosmildoce>cuenca[l_r_embalse2-13+mes].dosmildoce){
			   max_mes=	cuenca[l_r_embalse-13+mes].dosmildoce;
			   min_mes=cuenca[l_r_embalse2-13+mes].dosmildoce;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse2-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse2-13+mes].dosmildoce==cuenca[l_r_embalse-13+mes].dosmildoce){
			   printf("%s y %s tinen la misma capacidad en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,cuenca[l_r_embalse-1].embalse_nombre,mes);}
			break;
		case(2013):
			printf("La capacidad del primer embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse-13+mes].dosmiltrece);
			printf("La capacidad del segundo embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse2-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse2-13+mes].dosmiltrece);
			if(cuenca[l_r_embalse2-13+mes].dosmiltrece>cuenca[l_r_embalse-13+mes].dosmiltrece){
			   max_mes=	cuenca[l_r_embalse2-13+mes].dosmiltrece;
			   min_mes=cuenca[l_r_embalse-13+mes].dosmiltrece;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse-13+mes].dosmiltrece>cuenca[l_r_embalse2-13+mes].dosmiltrece){
			   max_mes=	cuenca[l_r_embalse-13+mes].dosmiltrece;
			   min_mes=cuenca[l_r_embalse2-13+mes].dosmiltrece;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse2-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse2-13+mes].dosmiltrece==cuenca[l_r_embalse-13+mes].dosmiltrece){
			   printf("%s y %s tinen la misma capacidad en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,cuenca[l_r_embalse-1].embalse_nombre,mes);}
			break;
		case(2014):
			printf("La capacidad del primer embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse-13+mes].dosmilcatorce);
			printf("La capacidad del segundo embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse2-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse2-13+mes].dosmilcatorce);
			if(cuenca[l_r_embalse2-13+mes].dosmilcatorce>cuenca[l_r_embalse-13+mes].dosmilcatorce){
			   max_mes=	cuenca[l_r_embalse2-13+mes].dosmilcatorce;
			   min_mes=cuenca[l_r_embalse-13+mes].dosmilcatorce;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse-13+mes].dosmilcatorce>cuenca[l_r_embalse2-13+mes].dosmilcatorce){
			   max_mes=	cuenca[l_r_embalse-13+mes].dosmilcatorce;
			   min_mes=cuenca[l_r_embalse2-13+mes].dosmilcatorce;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse2-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse2-13+mes].dosmilcatorce==cuenca[l_r_embalse-13+mes].dosmilcatorce){
			   printf("%s y %s tinen la misma capacidad en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,cuenca[l_r_embalse-1].embalse_nombre,mes);}
			break;
		case(2015):
			printf("La capacidad del primer embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse-13+mes].dosmilquince);
			printf("La capacidad del segundo embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse2-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse2-13+mes].dosmilquince);
			if(cuenca[l_r_embalse2-13+mes].dosmilquince>cuenca[l_r_embalse-13+mes].dosmilquince){
			   max_mes=	cuenca[l_r_embalse2-13+mes].dosmilquince;
			   min_mes=cuenca[l_r_embalse-13+mes].dosmilquince;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse-13+mes].dosmilquince>cuenca[l_r_embalse2-13+mes].dosmilquince){
			   max_mes=	cuenca[l_r_embalse-13+mes].dosmilquince;
			   min_mes=cuenca[l_r_embalse2-13+mes].dosmilquince;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse2-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse2-13+mes].dosmilquince==cuenca[l_r_embalse-13+mes].dosmilquince){
			   printf("%s y %s tinen la misma capacidad en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,cuenca[l_r_embalse-1].embalse_nombre,mes);}
			break;
		case(2016):
			printf("La capacidad del primer embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse-13+mes].dosmildieciseis);
			printf("La capacidad del segundo embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse2-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse2-13+mes].dosmildieciseis);
			if(cuenca[l_r_embalse2-13+mes].dosmildieciseis>cuenca[l_r_embalse-13+mes].dosmildieciseis){
			   max_mes=	cuenca[l_r_embalse2-13+mes].dosmildieciseis;
			   min_mes=cuenca[l_r_embalse-13+mes].dosmildieciseis;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse-13+mes].dosmildieciseis>cuenca[l_r_embalse2-13+mes].dosmildieciseis){
			   max_mes=	cuenca[l_r_embalse-13+mes].dosmildieciseis;
			   min_mes=cuenca[l_r_embalse2-13+mes].dosmildieciseis;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse2-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse2-13+mes].dosmildieciseis==cuenca[l_r_embalse-13+mes].dosmildieciseis){
			   printf("%s y %s tinen la misma capacidad en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,cuenca[l_r_embalse-1].embalse_nombre,mes);}
			break;
		case(2017):
			printf("La capacidad del primer embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse-13+mes].dosmildiecisiete);
			printf("La capacidad del segundo embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse2-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse2-13+mes].dosmildiecisiete);
			if(cuenca[l_r_embalse2-13+mes].dosmildiecisiete>cuenca[l_r_embalse-13+mes].dosmildiecisiete){
			   max_mes=	cuenca[l_r_embalse2-13+mes].dosmildiecisiete;
			   min_mes=cuenca[l_r_embalse-13+mes].dosmildiecisiete;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse-13+mes].dosmildiecisiete>cuenca[l_r_embalse2-13+mes].dosmildiecisiete){
			   max_mes=	cuenca[l_r_embalse-13+mes].dosmildiecisiete;
			   min_mes=cuenca[l_r_embalse2-13+mes].dosmildiecisiete;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse2-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse2-13+mes].dosmildiecisiete==cuenca[l_r_embalse-13+mes].dosmildiecisiete){
			   printf("%s y %s tinen la misma capacidad en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,cuenca[l_r_embalse-1].embalse_nombre,mes);}
			break;
		case(2018):
			printf("La capacidad del primer embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse-13+mes].dosmildieciocho);
			printf("La capacidad del segundo embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse2-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse2-13+mes].dosmildieciocho);
			if(cuenca[l_r_embalse2-13+mes].dosmildieciocho>cuenca[l_r_embalse-13+mes].dosmildieciocho){
			   max_mes=	cuenca[l_r_embalse2-13+mes].dosmildieciocho;
			   min_mes=cuenca[l_r_embalse-13+mes].dosmildieciocho;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse-13+mes].dosmildieciocho>cuenca[l_r_embalse2-13+mes].dosmildieciocho){
			   max_mes=	cuenca[l_r_embalse-13+mes].dosmildieciocho;
			   min_mes=cuenca[l_r_embalse2-13+mes].dosmildieciocho;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse2-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse2-13+mes].dosmildieciocho==cuenca[l_r_embalse-13+mes].dosmildieciocho){
			   printf("%s y %s tinen la misma capacidad en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,cuenca[l_r_embalse-1].embalse_nombre,mes);}
			break;
		case(2019):
			printf("La capacidad del primer embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse-13+mes].dosmildiecinueve);
			printf("La capacidad del segundo embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse2-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse2-13+mes].dosmildiecinueve);
			if(cuenca[l_r_embalse2-13+mes].dosmildiecinueve>cuenca[l_r_embalse-13+mes].dosmildiecinueve){
			   max_mes=	cuenca[l_r_embalse2-13+mes].dosmildiecinueve;
			   min_mes=cuenca[l_r_embalse-13+mes].dosmildiecinueve;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse-13+mes].dosmildiecinueve>cuenca[l_r_embalse2-13+mes].dosmildiecinueve){
			   max_mes=	cuenca[l_r_embalse-13+mes].dosmildiecinueve;
			   min_mes=cuenca[l_r_embalse2-13+mes].dosmildiecinueve;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse2-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse2-13+mes].dosmildiecinueve==cuenca[l_r_embalse-13+mes].dosmildiecinueve){
			   printf("%s y %s tinen la misma capacidad en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,cuenca[l_r_embalse-1].embalse_nombre,mes);}
			break;
		case(2020):
			printf("La capacidad del primer embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse-13+mes].dosmilveinte);
			printf("La capacidad del segundo embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse2-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse2-13+mes].dosmilveinte);
			if(cuenca[l_r_embalse2-13+mes].dosmilveinte>cuenca[l_r_embalse-13+mes].dosmilveinte){
			   max_mes=	cuenca[l_r_embalse2-13+mes].dosmilveinte;
			   min_mes=cuenca[l_r_embalse-13+mes].dosmilveinte;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse-13+mes].dosmilveinte>cuenca[l_r_embalse2-13+mes].dosmilveinte){
			   max_mes=	cuenca[l_r_embalse-13+mes].dosmilveinte;
			   min_mes=cuenca[l_r_embalse2-13+mes].dosmilveinte;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse2-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse2-13+mes].dosmilveinte==cuenca[l_r_embalse-13+mes].dosmilveinte){
			   printf("%s y %s tinen la misma capacidad en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,cuenca[l_r_embalse-1].embalse_nombre,mes);}
			break;
		case(2021):
			printf("La capacidad del primer embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse-13+mes].dosmilveintiuno);
			printf("La capacidad del segundo embalse %s en el %i mes del %i es %.2f.\n",cuenca[l_r_embalse2-1].embalse_nombre,mes,anyo,cuenca[l_r_embalse2-13+mes].dosmilveintiuno);
			if(cuenca[l_r_embalse2-13+mes].dosmildoce>cuenca[l_r_embalse-13+mes].dosmilveintiuno){
			   max_mes=	cuenca[l_r_embalse2-13+mes].dosmilveintiuno;
			   min_mes=cuenca[l_r_embalse-13+mes].dosmilveintiuno;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse-13+mes].dosmilveintiuno>cuenca[l_r_embalse2-13+mes].dosmilveintiuno){
			   max_mes=	cuenca[l_r_embalse-13+mes].dosmilveintiuno;
			   min_mes=cuenca[l_r_embalse2-13+mes].dosmilveintiuno;
			   printf("%s sobrepaso en %.2f hm^3 a %s en el %i mes.\n", cuenca[l_r_embalse-1].embalse_nombre,res_mes=max_mes-min_mes,cuenca[l_r_embalse2-1].embalse_nombre,mes);}
	        if(cuenca[l_r_embalse2-13+mes].dosmilveintiuno==cuenca[l_r_embalse-13+mes].dosmilveintiuno){
			   printf("%s y %s tinen la misma capacidad en el %i mes.\n", cuenca[l_r_embalse2-1].embalse_nombre,cuenca[l_r_embalse-1].embalse_nombre,mes);}
			break;
		
	}
}
float max_capM,min_capM,dif_capM;
printf("La capacidad maxima que puede contener los embalses elegidos, %s y %s, es %.2f y %.2f respectivamente.\n", cuenca[l_r_embalse-1].embalse_nombre, cuenca[l_r_embalse2-1].embalse_nombre, embalse[l_r_embalse/12-1].etotal,embalse[l_r_embalse2/12-1].etotal);
if(embalse[l_r_embalse2/12-1].etotal>embalse[l_r_embalse/12-1].etotal){
	max_capM=embalse[l_r_embalse2/12-1].etotal;
	min_capM=embalse[l_r_embalse/12-1].etotal;
	printf("La diferencia de capacidad maxima entre %s y %s es de %.2f hm^3.\n",cuenca[l_r_embalse2-1].embalse_nombre,cuenca[l_r_embalse-1].embalse_nombre,dif_capM=max_capM-min_capM);
   }
if(embalse[l_r_embalse/12-1].etotal>embalse[l_r_embalse2/12-1].etotal){
	max_capM=embalse[l_r_embalse/12-1].etotal;
	min_capM=embalse[l_r_embalse2/12-1].etotal;
	printf("La diferencia de capacidad maxima entre %s y %s es de %.2f hm^3.\n",cuenca[l_r_embalse-1].embalse_nombre,cuenca[l_r_embalse2-1].embalse_nombre,dif_capM=max_capM-min_capM);
   }
if(embalse[l_r_embalse2/12-1].etotal==embalse[l_r_embalse/12-1].etotal){
	
	printf("Los embalses %s y %s tienen la misma capacidad maxima.\n",cuenca[l_r_embalse-1].embalse_nombre,cuenca[l_r_embalse2-1].embalse_nombre);
   }
   
   //
float max_sup,min_sup,dif_sup;
   
printf("La superficie del primer embalse, %s, es %.2f.\n", cuenca[l_r_embalse-1].embalse_nombre,comp[l_r_embalse/12-1].superficie);
printf("La superficie del segundo embalse, %s, es %.2f.\n",cuenca[l_r_embalse2-1].embalse_nombre,comp[l_r_embalse2/12-1].superficie);
if(comp[l_r_embalse2/12-1].superficie>comp[l_r_embalse/12-1].superficie){
	max_sup=comp[l_r_embalse2/12-1].superficie;
	min_sup=comp[l_r_embalse/12-1].superficie;
	printf("La diferencia de superficies entre %s y %s es de %.2f hm.\n",cuenca[l_r_embalse2-1].embalse_nombre,cuenca[l_r_embalse-1].embalse_nombre,dif_sup=max_sup-min_sup);
   }
if(comp[l_r_embalse/12-1].superficie>comp[l_r_embalse2/12-1].superficie){
	max_sup=embalse[l_r_embalse/12-1].etotal;
	min_sup=embalse[l_r_embalse2/12-1].etotal;
	printf("La diferencia de superficies entre %s y %s es de %.2f hm.\n",cuenca[l_r_embalse-1].embalse_nombre,cuenca[l_r_embalse2-1].embalse_nombre,dif_sup=max_sup-min_sup);
   }
if(comp[l_r_embalse/12-1].superficie==comp[l_r_embalse2/12-1].superficie){
	
	printf("Los embalses %s y %s tienen la misma superficie.\n",cuenca[l_r_embalse-1].embalse_nombre,cuenca[l_r_embalse2-1].embalse_nombre);
   }
   
//

if(strcmp(comp[l_r_embalse/12-1].tipo_presa,comp[l_r_embalse2/12-1].tipo_presa)!=0){
	printf("El primer embalse, %s, tiene un embalse de tipo %s, mientras que el segundo embalse, %s, tiene un embalse de tipo %s.\n",cuenca[l_r_embalse-1].embalse_nombre,comp[l_r_embalse/12-1].tipo_presa, cuenca[l_r_embalse2-1].embalse_nombre,comp[l_r_embalse2/12-1].tipo_presa);
}else{
	printf("Ambos embalses son del mismo tipo, %s.\n",comp[l_r_embalse/12-1].tipo_presa);
}

//

if(strcmp(comp[l_r_embalse/12-1].uso_abastecimiento,comp[l_r_embalse2/12-1].uso_abastecimiento)!=0){
	if(comp[l_r_embalse/12-1].uso_abastecimiento=="Si"){
		printf("Solo el embalse, %s, se usa para abastecimiento.\n",cuenca[l_r_embalse-1].embalse_nombre );
	}else{
		printf("Solo el embalse, %s, se usa para abastecimiento.\n",cuenca[l_r_embalse2-1].embalse_nombre );
	}
}else{
	if(comp[l_r_embalse/12-1].uso_restaurante=="Si"){
	printf("Ambos embalses se usan para abastecimiento.\n");
}}
if(strcmp(comp[l_r_embalse/12-1].uso_riego,comp[l_r_embalse2/12-1].uso_riego)!=0){
	if(comp[l_r_embalse/12-1].uso_riego=="Si"){
		printf("Solo el embalse, %s, se usa para riego.\n",cuenca[l_r_embalse-1].embalse_nombre );
	}else{
		printf("Solo el embalse, %s, se usa para riego.\n",cuenca[l_r_embalse2-1].embalse_nombre );
	}
}else{
	if(comp[l_r_embalse/12-1].uso_restaurante=="Si"){
	printf("Ambos embalses se usan para riego.\n");
}}
if(strcmp(comp[l_r_embalse/12-1].uso_electricidad,comp[l_r_embalse2/12-1].uso_electricidad)!=0){
	if(comp[l_r_embalse/12-1].uso_electricidad=="Si"){
		printf("Solo el embalse, %s, se usa para electricidad.\n",comp[l_r_embalse/12-1].nombre_embalse );
	}else{
		printf("Solo el embalse, %s, se usa para electricidad.\n",comp[l_r_embalse2/12-1].nombre_embalse );
	}
}else{
	if(comp[l_r_embalse/12-1].uso_restaurante=="Si"){
	printf("Ambos embalses se usan para electricidad.\n");
}}
if(strcmp(comp[l_r_embalse/12-1].uso_industrial,comp[l_r_embalse2/12-1].uso_industrial)!=0){
	if(comp[l_r_embalse/12-1].uso_industrial=="Si"){
		printf("Solo el embalse, %s, se usa para industrial.\n",comp[l_r_embalse/12-1].nombre_embalse );
	}else{
		printf("Solo el embalse, %s, se usa para industrial.\n",comp[l_r_embalse2/12-1].nombre_embalse );
	}
}else{
	if(comp[l_r_embalse/12-1].uso_restaurante=="Si"){
	printf("Ambos embalses se usan para industrial.\n");
}}
if(strcmp(comp[l_r_embalse/12-1].uso_pesca,comp[l_r_embalse2/12-1].uso_pesca)!=0){
	if(comp[l_r_embalse/12-1].uso_pesca=="Si"){
		printf("Solo el embalse, %s, se usa para pesca.\n",comp[l_r_embalse/12-1].nombre_embalse );
	}else{
		printf("Solo el embalse, %s, se usa para pesca.\n",comp[l_r_embalse2/12-1].nombre_embalse);
	}
}else{
	if(comp[l_r_embalse/12-1].uso_restaurante=="Si"){
	printf("Ambos embalses se usan para pesca.\n");
}}
if(strcmp(comp[l_r_embalse/12-1].uso_navegacion,comp[l_r_embalse2/12-1].uso_navegacion)!=0){
	if(comp[l_r_embalse/12-1].uso_navegacion=="Si"){
		printf("Solo el embalse, %s, se usa para navegacion.\n",comp[l_r_embalse/12-1].nombre_embalse );
	}else{
		printf("Solo el embalse, %s, se usa para navegacion.\n",comp[l_r_embalse2/12-1].nombre_embalse );
	}
}else{
	if(comp[l_r_embalse/12-1].uso_restaurante=="Si"){
	printf("Ambos embalses se usan para navegacion.\n");
}}
if(strcmp(comp[l_r_embalse/12-1].uso_banyo,comp[l_r_embalse2/12-1].uso_banyo)!=0){
	if(comp[l_r_embalse/12-1].uso_banyo=="Si"){
		printf("Solo el embalse, %s, se usa para banyo.\n",comp[l_r_embalse/12-1].nombre_embalse );
	}else{
		printf("Solo el embalse, %s, se usa para banyo.\n",comp[l_r_embalse2/12-1].nombre_embalse );
	}
}else{
	if(comp[l_r_embalse/12-1].uso_restaurante=="Si"){
	printf("Ambos embalses se usan para banyo.\n");
}}
if(strcmp(comp[l_r_embalse/12-1].uso_picnic,comp[l_r_embalse2/12-1].uso_picnic)!=0){
	if(comp[l_r_embalse/12-1].uso_picnic=="Si"){
		printf("Solo el embalse, %s, se usa para picnic.\n",comp[l_r_embalse/12-1].nombre_embalse );
	}else{
		printf("Solo el embalse, %s, se usa para picnic.\n",comp[l_r_embalse2/12-1].nombre_embalse );
	}
}else{
	if(comp[l_r_embalse/12-1].uso_restaurante=="Si"){
	printf("Ambos embalses se usan para picnic.\n");}}

if(strcmp(comp[l_r_embalse/12-1].uso_restaurante,comp[l_r_embalse2/12-1].uso_restaurante)!=0){
	if(comp[l_r_embalse/12-1].uso_restaurante=="Si"){
		printf("Solo el embalse, %s, se usa para restaurantes.\n",comp[l_r_embalse/12-1].nombre_embalse );
	}else{
		printf("Solo el embalse, %s, se usa para restaurantes.\n",comp[l_r_embalse2/12-1].nombre_embalse );
	}
}else{
	if(comp[l_r_embalse/12-1].uso_restaurante=="Si"){
	printf("Ambos embalses se usan para restaurantes.\n");}
}




	return 0;}






